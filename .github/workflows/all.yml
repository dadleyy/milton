name: all
on:
  push:
  create:
    tags:
      - v*
jobs:
  # elm ui compilation
  build-ui:
    runs-on: ubuntu-latest
    env:
      LOGIN_URL: https://www.krumpled.com/printing/api/auth/start
      LOGOUT_URL: https://www.krumpled.com/printing/api/auth/end
      API_ROOT: /printing/api
      UI_ROOT: /printing/
      ASSET_ROOT: /printing/
    defaults:
      run:
        working-directory: src/milton-ui
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: "set output: short_sha"
        id: vars
        run: echo "::set-output name=sha_short::$(echo $GITHUB_SHA | head -c 7)"

      - name: "apt update"
        run: sudo apt-get update

      - name: "build-deps - xsltproc"
        run: sudo apt-get install xsltproc -y

      - name: "build-deps - elm download"
        run: curl -L -l -o elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz

      - name: "build-deps - elm unpack"
        run: gunzip elm.gz && chmod +x elm

      - name: "build-deps - elm install"
        run: sudo mv elm /usr/local/bin/

      - name: "build-deps - elm version"
        run: elm --version

      - name: "build-deps - node deps"
        run: npm i

      - name: "lint - ts"
        run: npm run lint:js

      - name: "lint - elm"
        run: npm run lint:elm -- --validate

      - name: "build - make release"
        run: make release \
          VERSION=${{ steps.vars.outputs.sha_short }} \
          LOGIN_URL=${{ env.LOGIN_URL }} \
          API_ROOT=${{ env.API_ROOT }} \
          LOGOUT_URL=${{ env.LOGOUT_URL }} \
          UI_ROOT=${{ env.UI_ROOT }} \
          ASSET_ROOT=${{ env.ASSET_ROOT }} \

      # bundling + artifact generation:
      - name: "bundle - prepare"
        run: mkdir -p milton-ui-dist
      - name: "bundle - populate"
        run: cp -r target/release milton-ui-dist
      - name: "bundle - create"
        run: tar cvzf milton-ui-${{ steps.vars.outputs.sha_short }}.tar.gz milton-ui-dist

      - uses: actions/upload-artifact@v3
        with:
          name: milton-ui-${{ steps.vars.outputs.sha_short }}.tar.gz
          path: src/milton-ui/milton-ui-${{ steps.vars.outputs.sha_short }}.tar.gz

  # rust middleware compilation
  build-web:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/milton-web
    container:
      image: dadleyy/ubuntu-jammy-opnssl-3.x-rust-aarch64-compiler:latest
    steps:
      - uses: actions/checkout@v3

      - name: "set output: verify git version"
        run: git --version
      - name: "set output: short_sha"
        id: vars
        run: echo "::set-output name=sha_short::$(echo $GITHUB_SHA | head -c 7)"

      - name: "apt - update"
        run: apt-get update
      - name: "apt - install libudev-dev"
        run: apt-get install libudev-dev pkg-config -y

      - name: "rust - download"
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /tmp/rustup-install.sh
      - name: "rust - install"
        run: sh /tmp/rustup-install.sh -y
      - name: "rust - add target"
        run: . $HOME/.cargo/env && rustup target add aarch64-unknown-linux-gnu
      - name: "rust - add components"
        run: . $HOME/.cargo/env && rustup component add --target aarch64-unknown-linux-gnu rust-std rust-src rustc-dev

      # main application compliation:
      - name: "cargo - build"
        run: . $HOME/.cargo/env && cargo build --target aarch64-unknown-linux-gnu --release --no-default-features
        env:
          OPENSSL_LIB_DIR: /etc/arm-dependencies/openssl-3.0.7
          OPENSSL_INCLUDE_DIR: /etc/arm-dependencies/openssl-3.0.7/include
          MILTON_VERSION: "${{ steps.vars.outputs.sha_short }}"

      # bundling + artifact generation:
      - name: "bundle - prepare"
        run: mkdir -p milton-web-dist/bin
      - name: "bundle - populate"
        run: cp target/aarch64-unknown-linux-gnu/release/milton milton-web-dist/bin/milton
      - name: "bundle - create"
        run: tar cvzf milton-web-aarch64-unknown-linux-gnu-${{ steps.vars.outputs.sha_short }}.tar.gz milton-web-dist

      - uses: actions/upload-artifact@v3
        with:
          name: milton-web-aarch64-unknown-linux-gnu-${{ steps.vars.outputs.sha_short }}.tar.gz
          path: src/milton-web/milton-web-aarch64-unknown-linux-gnu-${{ steps.vars.outputs.sha_short }}.tar.gz

  publish:
    runs-on: ubuntu-latest
    needs: ["build-ui", "build-web"]
    steps:
      - uses: actions/checkout@v2
      - name: "set output: short_sha"
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - uses: actions/download-artifact@v3
        with:
          name: "milton-web-aarch64-unknown-linux-gnu-${{ steps.vars.outputs.sha_short }}.tar.gz"
      - uses: actions/download-artifact@v3
        with:
          name: "milton-ui-${{ steps.vars.outputs.sha_short }}.tar.gz"
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "./*.tar.gz"
          generate_release_notes: true
